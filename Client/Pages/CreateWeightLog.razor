@page "/add-weight-log/{id:int}"
@attribute [Authorize]

@inject NavigationManager navigation
@inject CompetitionsService competitionsService
@inject ContestantsService contestantsService
@inject WeightLogsService weightLogsService

@if (competition != null && contestant != null)
{
    <PageHeader headerText="Weigh In" />

    <hr />

    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header">
                    <h5>Competition: @competition.Name</h5>
                </div>
                <div class="card-body">
                    <EditForm Model="@weightLog" OnValidSubmit="HandleSubmit">
                        <div class="form-group row">
                            <div class="col-12">
                                <label>Date</label>
                                <InputDate @bind-Value="weightLog.MeasurementDate" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-12">
                                <label>Weight</label>
                                <InputNumber @bind-Value="weightLog.WeightMeasurement" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-6">
                                <button @onclick='() => navigation.NavigateTo($"/competition-detail/{competition.CompetitionId}")' class="btn btn-secondary btn-block"
                                        type="reset">
                                    Cancel
                                </button>
                            </div>
                            <div class="col-6">
                                <button class="btn btn-success btn-block" type="submit">Submit</button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <LoadingSpinner />
}

@code {
    [Parameter]
    public int id { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string userId { get; set; }
    private string username { get; set; }
    private Competition competition { get; set; } = new Competition();
    private Contestant contestant { get; set; }
    private WeightLog weightLog { get; set; } = new WeightLog();

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userId = user.FindFirst(c => c.Type == "sub").Value;
            username = user.FindFirst(c => c.Type == "name").Value;
        }

        contestant = await contestantsService.GetContestant(userId);
        weightLog.ContestantId = contestant.ContestantId;
        competition = await competitionsService.GetCompetition(id);
    }

    private async Task HandleSubmit()
    {
        weightLog = await weightLogsService.PostWeightLog(weightLog);
        navigation.NavigateTo($"competition-detail/{competition.CompetitionId}");
    }
}
